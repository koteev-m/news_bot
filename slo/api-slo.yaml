version: "prometheus/v1"
service: "newsbot-api"
slos:
  - name: "api-availability"
    objective: 99.5
    description: "HTTP availability for critical API"
    labels: { owner: "sre", tier: "critical" }
    sli:
      events:
        error_query: |
          sum(rate(http_server_requests_seconds_count{status=~"5.."}[{{.window}}]))
        total_query: |
          sum(rate(http_server_requests_seconds_count[{{.window}}]))
    alerting:
      name: "api-availability"
      labels: { severity: "page" }
      annotations:
        summary: "API availability SLO burn rate"
      page_alert:
        disable: false
        for: 5m
        labels: { route: "slo" }
        annotations:
          runbook: "docs/RELEASE_GATES.md"
      ticket_alert:
        disable: false
      burn_rate_thresholds:
        - window: 5m
          burn_rate: 14
          threshold: 2
          for: 2m
        - window: 1h
          burn_rate: 6
          threshold: 2
          for: 10m
        - window: 6h
          burn_rate: 3
          threshold: 1
          for: 30m
        - window: 1d
          burn_rate: 1
          threshold: 1
          for: 1h
  - name: "api-latency-p95"
    objective: 99.0
    description: "p95 latency under threshold"
    labels: { owner: "sre", tier: "important" }
    sli:
      raw:
        error_ratio_query: |
          max(0,
            (
              histogram_quantile(0.95, sum by (le) (rate(http_server_requests_seconds_bucket[{{.window}}])))
              > bool 1.5
            )
          )
        total_query: |
          # dummy equally 1 to use error_ratio_query as direct
          1
    alerting:
      name: "api-latency"
      labels: { severity: "page" }
      annotations:
        summary: "API p95 latency SLO burn"
      page_alert:
        disable: false
        for: 5m
      burn_rate_thresholds:
        - window: 5m
          burn_rate: 14
          threshold: 2
          for: 2m
        - window: 1h
          burn_rate: 6
          threshold: 2
          for: 10m
