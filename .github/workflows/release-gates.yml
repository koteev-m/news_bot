name: Release Gates

on:
  workflow_dispatch:
  workflow_call:

jobs:
  precheck:
    name: Preflight Conflict Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check for conflict markers
        run: |
          if git grep -n "^<<<<<<<"; then
            echo "Conflict markers detected"
            exit 1
          fi
          if git grep -n "^======="; then
            echo "Conflict markers detected"
            exit 1
          fi
          if git grep -n ">>>>>>>"; then
            echo "Conflict markers detected"
            exit 1
          fi

  build-and-test:
    name: Build, Lint & Test
    needs: precheck
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true
          fetch-depth: 0
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"
          cache: gradle
      - name: Gradle checks
        run: ./gradlew --stacktrace --info ktlintCheck detekt
      - name: Gradle build
        run: ./gradlew --stacktrace --info clean build
      - name: Module tests
        run: ./gradlew --stacktrace --info :core:test :storage:test :app:test

  audit:
    name: Compliance Audit Grep
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Run audit checks
        run: tools/audit/grep_checks.sh

  e2e-miniapp:
    name: Miniapp E2E Smoke
    needs: build-and-test
    runs-on: ubuntu-latest
    if: ${{ hashFiles('miniapp/package.json') != '' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        working-directory: miniapp
      - name: Build miniapp
        run: pnpm build
        working-directory: miniapp
      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps
        working-directory: miniapp
      - name: Run E2E tests
        run: pnpm test:e2e -- --reporter=list
        working-directory: miniapp

  k6-dry:
    name: k6 Smoke Dry Run
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup k6
        uses: grafana/setup-k6-action@v1
      - name: Run dry-run scenarios
        run: |
          set -euo pipefail
          mkdir -p k6-logs
          shopt -s nullglob
          scenarios=(deploy/load/k6/*_scenario.js)
          if [ ${#scenarios[@]} -eq 0 ]; then
            echo "No k6 scenarios detected"
            exit 0
          fi
          for script in "${scenarios[@]}"; do
            name=$(basename "$script")
            log_file="k6-logs/${name%.js}.log"
            echo "Validating $script"
            BASE_URL=https://example.invalid k6 run --vus 1 --duration 1s "$script" | tee "$log_file"
          done
      - name: Upload k6 logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: k6-dry-run-logs
          path: k6-logs
          if-no-files-found: warn


