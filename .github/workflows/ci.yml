name: CI

on:
  push:
    branches: ["**"]
  pull_request:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  precheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Fail on merge conflict markers
        run: |
          if git grep -nE '^(<<<<<<<|=======|>>>>>>>)' -- . ':!**/.github/**'; then
            echo "Merge conflict markers found. Please resolve.";
            exit 1;
          fi
          echo "No merge conflict markers found."

  seed-syntax-check:
    needs: precheck
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install PostgreSQL client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client
      - name: Wait for Postgres
        run: |
          for i in {1..20}; do
            if pg_isready -h localhost -U postgres; then
              exit 0
            fi
            sleep 2
          done
          exit 1
      - name: SQL seed presence & basic check
        env:
          PGPASSWORD: postgres
        run: |
          psql -v ON_ERROR_STOP=1 -h localhost -U postgres -d postgres -f deploy/seed/demo_seed.sql

  backend:
    needs: precheck
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (with LFS)
        uses: actions/checkout@v4
        with:
          lfs: true
          fetch-depth: 0
      - name: Setup JDK 21 (Temurin) with Gradle cache
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: gradle
      - name: Lint (ktlint + detekt strict)
        run: ./gradlew --no-daemon --stacktrace ktlintCheck detekt -PstrictLint=true
      - name: Build (Gradle)
        uses: gradle/gradle-build-action@v3
        with:
          arguments: --no-daemon --stacktrace clean build
      - name: Module tests (:core :storage :app)
        run: ./gradlew :core:test :storage:test :app:test --console=plain
      - name: Upload backend reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-reports
          path: |
            **/build/reports/ktlint/**/*
            **/build/reports/detekt/**/*
            **/build/reports/tests/**/*
          if-no-files-found: ignore

  miniapp:
    if: ${{ hashFiles('miniapp/pnpm-lock.yaml') != '' }}
    needs: precheck
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'pnpm'
          cache-dependency-path: miniapp/pnpm-lock.yaml
      - name: Enable corepack and pnpm
        run: |
          corepack enable
          corepack prepare pnpm@latest --activate
          pnpm -v
      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: linux-pnpm-${{ hashFiles('miniapp/pnpm-lock.yaml') }}
          restore-keys: |
            linux-pnpm-
      - name: Install dependencies
        working-directory: miniapp
        run: pnpm install --frozen-lockfile
      - name: Build miniapp
        working-directory: miniapp
        run: pnpm build
      - name: Test miniapp
        working-directory: miniapp
        run: pnpm test -- --run
      - name: Upload miniapp artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: miniapp-artifacts
          path: |
            miniapp/dist/**/*
            miniapp/coverage/**/*
          if-no-files-found: ignore
