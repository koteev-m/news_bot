name: Nightly Load Soak

on:
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * *'

permissions:
  contents: read

jobs:
  portfolio-ramp:
    runs-on: ubuntu-latest
    env:
      BASE_URL: ${{ secrets.STAGE_BASE_URL }}
      JWT: ${{ secrets.STAGE_JWT }}
      APP_PROFILE: staging
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Precheck merge conflicts
        run: |
          if git ls-files -z | xargs -0 -r grep -n '<<<<<<< '; then
            echo 'Merge conflict markers detected';
            exit 1;
          fi
      - name: Setup k6
        uses: grafana/setup-k6-action@v1
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Guard environment profile
        run: |
          if [[ "${APP_PROFILE}" == "prod" ]]; then
            echo 'Refusing to run load tests in production profile';
            exit 2;
          fi
      - name: Run portfolio ramp soak
        env:
          PORTFOLIO_ID: ${{ secrets.STAGE_PORTFOLIO_ID }}
        run: |
          k6 run --summary-export=summary.json deploy/load/k6/portfolio_ramp.js
      - name: Convert summary to JUnit
        run: node deploy/load/k6/summary-to-junit.js summary.json junit.xml
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: portfolio-ramp-reports
          path: |
            summary.json
            junit.xml

  webhook-burst:
    runs-on: ubuntu-latest
    env:
      BASE_URL: ${{ secrets.STAGE_BASE_URL }}
      WEBHOOK_SECRET: ${{ secrets.STAGE_WEBHOOK_SECRET }}
      TG_USER_ID: ${{ secrets.STAGE_TG_USER_ID }}
      APP_PROFILE: staging
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Precheck merge conflicts
        run: |
          if git ls-files -z | xargs -0 -r grep -n '<<<<<<< '; then
            echo 'Merge conflict markers detected';
            exit 1;
          fi
      - name: Setup k6
        uses: grafana/setup-k6-action@v1
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Guard environment profile
        run: |
          if [[ "${APP_PROFILE}" == "prod" ]]; then
            echo 'Refusing to run load tests in production profile';
            exit 2;
          fi
      - name: Run webhook burst soak
        run: |
          k6 run --summary-export=summary.json deploy/load/k6/webhook_burst.js
      - name: Convert summary to JUnit
        run: node deploy/load/k6/summary-to-junit.js summary.json junit.xml
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: webhook-burst-reports
          path: |
            summary.json
            junit.xml
