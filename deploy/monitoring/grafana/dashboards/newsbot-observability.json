{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "grafana"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": null,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "prometheus",
        "uid": "prometheus"
      },
      "fieldConfig": {
        "defaults": {
          "custom": {},
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 1.5
              }
            ]
          },
          "unit": "s"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 0,
        "y": 0
      },
      "id": 1,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "targets": [
        {
          "exemplar": true,
          "expr": "histogram_quantile(0.5, sum by (le) (rate(http_server_requests_seconds_bucket{job=~\"$job\", uri!~\"/metrics\"}[$__rate_interval])))",
          "interval": "",
          "legendFormat": "p50",
          "refId": "A"
        },
        {
          "exemplar": true,
          "expr": "histogram_quantile(0.95, sum by (le) (rate(http_server_requests_seconds_bucket{job=~\"$job\", uri!~\"/metrics\"}[$__rate_interval])))",
          "interval": "",
          "legendFormat": "p95",
          "refId": "B"
        },
        {
          "exemplar": true,
          "expr": "histogram_quantile(0.99, sum by (le) (rate(http_server_requests_seconds_bucket{job=~\"$job\", uri!~\"/metrics\"}[$__rate_interval])))",
          "interval": "",
          "legendFormat": "p99",
          "refId": "C"
        }
      ],
      "title": "API Latency (p50/p95/p99)",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "prometheus"
      },
      "fieldConfig": {
        "defaults": {
          "custom": {},
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 1.5
              }
            ]
          },
          "unit": "s"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 12,
        "y": 0
      },
      "id": 2,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "exemplar": true,
          "expr": "histogram_quantile(0.95, sum by (le) (rate(http_server_requests_seconds_bucket{job=~\"$job\", uri=~\"$uri\"}[$__rate_interval])))",
          "interval": "",
          "legendFormat": "p95 {{uri}}",
          "refId": "A"
        }
      ],
      "title": "Webhook Latency p95",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "prometheus"
      },
      "fieldConfig": {
        "defaults": {
          "custom": {
            "lineWidth": 2
          },
          "mappings": [],
          "thresholds": {
            "mode": "percentage",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 2
              }
            ]
          },
          "unit": "percentunit"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 9
      },
      "id": 3,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "targets": [
        {
          "expr": "sum(rate(http_server_requests_seconds_count{job=~\"$job\", status=~\"2..\"}[$__rate_interval])) / clamp_min(sum(rate(http_server_requests_seconds_count{job=~\"$job\"}[$__rate_interval])), 1e-9)",
          "format": "time_series",
          "legendFormat": "2xx",
          "refId": "A"
        },
        {
          "expr": "sum(rate(http_server_requests_seconds_count{job=~\"$job\", status=~\"4..\"}[$__rate_interval])) / clamp_min(sum(rate(http_server_requests_seconds_count{job=~\"$job\"}[$__rate_interval])), 1e-9)",
          "format": "time_series",
          "legendFormat": "4xx",
          "refId": "B"
        },
        {
          "expr": "sum(rate(http_server_requests_seconds_count{job=~\"$job\", status=~\"5..\"}[$__rate_interval])) / clamp_min(sum(rate(http_server_requests_seconds_count{job=~\"$job\"}[$__rate_interval])), 1e-9)",
          "format": "time_series",
          "legendFormat": "5xx",
          "refId": "C"
        }
      ],
      "title": "HTTP Status Code Rate (%)",
      "transformations": [],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "prometheus"
      },
      "fieldConfig": {
        "defaults": {
          "custom": {
            "lineWidth": 2
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 9
      },
      "id": 4,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "targets": [
        {
          "expr": "increase(webhook_stars_success_total{job=~\"$job\"}[$__rate_interval])",
          "legendFormat": "Success",
          "refId": "A"
        },
        {
          "expr": "increase(webhook_stars_duplicate_total{job=~\"$job\"}[$__rate_interval])",
          "legendFormat": "Duplicates",
          "refId": "B"
        }
      ],
      "title": "Stars Success vs Duplicates",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "prometheus"
      },
      "fieldConfig": {
        "defaults": {
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 17
      },
      "id": 5,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        }
      },
      "targets": [
        {
          "expr": "sum(increase(domain_observability_alerts_push_total{job=~\"$job\"}[$__rate_interval]))",
          "legendFormat": "Alerts pushed",
          "refId": "A"
        },
        {
          "expr": "sum(increase(domain_observability_budget_reject_total{job=~\"$job\"}[$__rate_interval]))",
          "legendFormat": "Budget rejects",
          "refId": "B"
        }
      ],
      "title": "Alerts Push / Budget Rejects",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "prometheus"
      },
      "fieldConfig": {
        "defaults": {
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "bytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 17
      },
      "id": 6,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "targets": [
        {
          "expr": "sum(jvm_memory_used_bytes{job=~\"$job\", area=\"heap\"})",
          "legendFormat": "Heap Used",
          "refId": "A"
        },
        {
          "expr": "sum(jvm_memory_max_bytes{job=~\"$job\", area=\"heap\"})",
          "legendFormat": "Heap Max",
          "refId": "B"
        }
      ],
      "title": "JVM Heap Usage",
      "transformations": [],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "prometheus"
      },
      "description": "If JVM thread metrics are unavailable, enable Micrometer JVM metrics in the application.",
      "fieldConfig": {
        "defaults": {
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 25
      },
      "id": 7,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "expr": "sum(jvm_threads_live_threads{job=~\"$job\"})",
          "legendFormat": "Live",
          "refId": "A"
        },
        {
          "expr": "sum(jvm_threads_peak_threads{job=~\"$job\"})",
          "legendFormat": "Peak",
          "refId": "B"
        }
      ],
      "title": "JVM Threads",
      "type": "timeseries"
    }
  ],
  "refresh": "30s",
  "schemaVersion": 38,
  "style": "dark",
  "tags": [
    "newsbot"
  ],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "All",
          "value": ""
        },
        "datasource": {
          "type": "prometheus",
          "uid": "prometheus"
        },
        "definition": "label_values(http_server_requests_seconds_count, job)",
        "hide": 0,
        "includeAll": true,
        "label": "Job",
        "multi": true,
        "name": "job",
        "options": [],
        "query": "label_values(http_server_requests_seconds_count, job)",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "/telegram/webhook",
          "value": "/telegram/webhook"
        },
        "datasource": {
          "type": "prometheus",
          "uid": "prometheus"
        },
        "definition": "label_values(http_server_requests_seconds_bucket{job=~\"$job\", uri!~\"/metrics\"}, uri)",
        "hide": 0,
        "includeAll": false,
        "label": "URI",
        "multi": false,
        "name": "uri",
        "options": [],
        "query": "label_values(http_server_requests_seconds_bucket{job=~\"$job\", uri!~\"/metrics\"}, uri)",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 2,
        "type": "query"
      },
      {
        "auto": true,
        "auto_count": 30,
        "auto_min": "15s",
        "current": {
          "selected": false,
          "text": "auto",
          "value": ""
        },
        "hide": 0,
        "label": "Interval",
        "name": "__interval",
        "options": [
          {
            "selected": true,
            "text": "auto",
            "value": ""
          }
        ],
        "query": "",
        "refresh": 2,
        "skipUrlSync": false,
        "type": "interval"
      }
    ]
  },
  "time": {
    "from": "now-6h",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "1h",
      "6h"
    ],
    "time_options": [
      "5m",
      "15m",
      "1h",
      "6h",
      "12h",
      "24h",
      "2d",
      "7d",
      "30d"
    ]
  },
  "timezone": "",
  "title": "NewsBot / Observability",
  "uid": "newsbot-observability",
  "version": 1,
  "weekStart": ""
}
